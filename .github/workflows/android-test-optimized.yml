name: Android Tests (Optimized)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'  # Required for latest Android SDK tools
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: AVD cache
      uses: actions/cache@v4
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-29-x86
    
    - name: Install Appium
      run: |
        npm install -g appium@latest
        appium driver install uiautomator2
        appium --version
    
    - name: Start Appium Server
      run: |
        appium server --address 127.0.0.1 --port 4723 --allow-insecure chromedriver_autodownload &
        sleep 5
    
    - name: Create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        arch: x86
        target: default
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: echo "Generated AVD snapshot for caching."
    
    - name: Run Android Tests on Emulator
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        arch: x86
        target: default
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: |
          # Wait for emulator to be ready
          adb wait-for-device
          adb shell input keyevent 82
          
          # Install the test APK
          echo "Installing test APK..."
          adb install apps/android/app-test.apk
          
          # Run tests
          npm run test:android
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-results
        path: allure-results/
        retention-days: 7
    
    - name: Generate Allure Report
      if: always()
      run: |
        npm run allure:generate || echo "Allure report generation failed"
    
    - name: Upload Allure Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report/
        retention-days: 7